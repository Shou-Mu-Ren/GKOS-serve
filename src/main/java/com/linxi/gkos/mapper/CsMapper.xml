<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.linxi.gkos.mapper.CsMapper" >
    <insert id="insertProvince">
        INSERT INTO province (name) VALUES (#{name,jdbcType=VARCHAR})
    </insert>

    <select id="findProvinceIdByName" resultType="java.lang.Integer">
        SELECT id FROM province WHERE name = #{name,jdbcType=VARCHAR}
    </select>

    <insert id="insertCity" parameterType="com.linxi.gkos.pojo.po.City">
        INSERT INTO city (name, province_id) VALUES (#{name,jdbcType=VARCHAR},#{provinceId,jdbcType=INTEGER})
    </insert>

    <select id="findCityIdByName" resultType="java.lang.Integer">
        SELECT id FROM city WHERE name = #{name,jdbcType=VARCHAR}
    </select>

    <insert id="insertUniversity" parameterType="com.linxi.gkos.pojo.po.University">
        INSERT INTO university (code, name) VALUES (#{code,jdbcType=VARCHAR},#{name,jdbcType=VARCHAR})
    </insert>

    <insert id="insertUniversityByAll" parameterType="com.linxi.gkos.pojo.po.University">
        INSERT INTO university (code, name, city_id, type, nature, f11, f211, f985)
        VALUES (#{code,jdbcType=VARCHAR},#{name,jdbcType=VARCHAR},
                #{cityId,jdbcType=INTEGER},#{type,jdbcType=VARCHAR},
                #{nature,jdbcType=VARCHAR},#{f11,jdbcType=INTEGER},
                #{f211,jdbcType=INTEGER},#{f985,jdbcType=INTEGER})
    </insert>

    <select id="findUniversityNameByCode" resultType="java.lang.String">
        SELECT name FROM university WHERE code = #{code,jdbcType=VARCHAR}
    </select>

    <insert id="insertMajorByAll" parameterType="com.linxi.gkos.pojo.po.Major">
        INSERT INTO major (code, name, university_code, level)
        VALUES (#{code,jdbcType=VARCHAR},#{name,jdbcType=VARCHAR},
                #{universityCode,jdbcType=VARCHAR},#{level,jdbcType=VARCHAR})
    </insert>

    <select id="findMajorIdByCodeAndUniversityCode" resultType="java.lang.Integer" parameterType="com.linxi.gkos.pojo.po.Major">
        SELECT id FROM major WHERE code = #{code,jdbcType=VARCHAR}
                                      AND university_code = #{universityCode,jdbcType=VARCHAR}
    </select>

    <insert id="insertAdmit" parameterType="com.linxi.gkos.pojo.po.Admit">
        INSERT INTO admit (major_id, plan, year)
        VALUES (#{majorId,jdbcType=INTEGER},#{plan,jdbcType=INTEGER},
                #{year,jdbcType=VARCHAR})
    </insert>

    <insert id="insertAdmitByAll" parameterType="com.linxi.gkos.pojo.po.Admit">
        INSERT INTO admit (major_id, rank, plan, year)
        VALUES (#{majorId,jdbcType=INTEGER},#{rank,jdbcType=INTEGER},
                #{plan,jdbcType=INTEGER},#{year,jdbcType=VARCHAR})
    </insert>

    <insert id="insertAdmit2" parameterType="com.linxi.gkos.pojo.po.Admit">
        INSERT INTO admit (major_id, grand, plan, year)
        VALUES (#{majorId,jdbcType=INTEGER},#{grank,jdbcType=INTEGER},
                #{plan,jdbcType=INTEGER},#{year,jdbcType=VARCHAR})
    </insert>

    <insert id="insertAdmitByAll2" parameterType="com.linxi.gkos.pojo.po.Admit">
        INSERT INTO admit (major_id, grand, rank, plan, year)
        VALUES (#{majorId,jdbcType=INTEGER},#{grand,jdbcType=INTEGER},
                #{rank,jdbcType=INTEGER},#{plan,jdbcType=INTEGER},
                #{year,jdbcType=VARCHAR})
    </insert>

    <select id="findAdmitIdByMajorIdAndYear" resultType="java.lang.Integer" parameterType="com.linxi.gkos.pojo.po.Admit">
        SELECT id FROM admit WHERE major_id = #{majorId,jdbcType=INTEGER}
                                       AND year = #{year,jdbcType=VARCHAR}
    </select>

    <update id="updateAdmitGrand" parameterType="com.linxi.gkos.pojo.po.Admit">
    UPDATE admit
    SET grand = #{grand,jdbcType=INTEGER}
    WHERE major_id = #{majorId,jdbcType=INTEGER} AND year = #{year,jdbcType=VARCHAR}
    </update>

    <update id="updateAdmitGrandByRank" parameterType="com.linxi.gkos.pojo.po.Admit">
        UPDATE admit
        SET grand = #{grand,jdbcType=INTEGER}
        WHERE year = #{year,jdbcType=VARCHAR}
                  AND rank between #{plan,jdbcType=INTEGER} and #{rank,jdbcType=INTEGER}
    </update>
</mapper>